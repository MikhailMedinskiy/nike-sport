name: Auto add Jira ticket to PR description

on:
  pull_request:
    types: [opened]

jobs:
  update-pr-description:
    runs-on: ubuntu-latest
    steps:
      - name: Update PR description with Jira ticket and cleanup
        uses: actions/github-script@v7
        with:
          script: |
            const branch = context.payload.pull_request.head.ref;
            const match = branch.match(/OBT-\d{4,5}/);
            if (!match) return;

            const jira = match[0];
            let body = context.payload.pull_request.body || "";

            // ---------------------------
            // Replace or inject Jira line
            // ---------------------------
            const jiraLine = `- Ticket: [${jira}](https://entdevbcdtravel.atlassian.net/browse/${jira})`;
            const jiraSectionHeader = '## üìã Jira Ticket';
            const jiraRegex = /- Ticket: \[OBT-[A-Z0-9X]{4,7}\]\([^)]+\)/i;

            if (body.includes(jiraSectionHeader)) {
              body = body.replace(jiraRegex, jiraLine);
              if (!body.includes(jiraLine)) {
                // No ticket line to replace ‚Äî insert after header
                body = body.replace(jiraSectionHeader, `${jiraSectionHeader}\n\n${jiraLine}`);
              }
            } else {
              // Section missing ‚Äî insert full section at top
              body = `${jiraSectionHeader}\n\n${jiraLine}\n\n${body}`;
            }

            // -------------------------------------
            // Remove `## üìù Description` if empty
            // -------------------------------------
            const descSectionRegex = /(## üìù Description\s*\n+)([\s\S]*?)(?=(\n## |\n<!--|$))/;
            const matchDesc = body.match(descSectionRegex);

            if (matchDesc) {
              const [fullMatch, header, content] = matchDesc;
              if (!content.trim()) {
                // Description section is empty ‚Äî remove it
                body = body.replace(fullMatch, '');
              }
            }

            // Cleanup: collapse extra newlines (more than 2)
            body = body.replace(/\n{3,}/g, '\n\n').trim();

            // Update only if something changed
            if (body !== context.payload.pull_request.body) {
              await github.rest.pulls.update({
                ...context.repo,
                pull_number: context.payload.pull_request.number,
                body
              });
            }
