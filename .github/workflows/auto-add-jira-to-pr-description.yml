name: Auto add Jira ticket to PR description

on:
  pull_request:
    types: [opened]

jobs:
  update-pr-description:
    runs-on: ubuntu-latest
    steps:
      - name: Add Jira ticket to PR description and clean up Description section
        uses: actions/github-script@v7
        with:
          script: |
            const branch = context.payload.pull_request.head.ref;
            // Match OBT-XXXX or OBT-XXXXX pattern in the branch name
            const match = branch.match(/OBT-\d{4,5}/);
            if (!match) return;

            const jira = match[0];
            let oldBody = context.payload.pull_request.body || "";

            // --- Jira ticket section logic ---
            const jiraSectionRegex = /(## üìã Jira Ticket\s*\n)((- Ticket: \[OBT-[A-Z0-9X]{4,7}\]\([^)]+\)\s*\n*)*)/i;
            const newJiraLine = `- Ticket: [${jira}](https://entdevbcdtravel.atlassian.net/browse/${jira})\n\n`;

            let newBody = oldBody;
            if (jiraSectionRegex.test(newBody)) {
              newBody = newBody.replace(jiraSectionRegex, `$1${newJiraLine}`);
            } else if (newBody.includes('## üìã Jira Ticket')) {
              newBody = newBody.replace(/(## üìã Jira Ticket\s*\n)/, `$1${newJiraLine}`);
            } else {
              newBody = `## üìã Jira Ticket\n\n${newJiraLine}${newBody}`;
            }

            // --- Description section cleanup logic ---
            // Remove the 'Description' section if only whitespace follows it up to the next header or end of file
            newBody = newBody.replace(
              /(## üìù Description\s*\n)((?:\s|\r|\n)*)(?=(## |<!--|$))/g,
              function(match, header, content, nextHeader) {
                if (!content.trim()) {
                  // Only whitespace/newlines after header, remove the whole section
                  return '';
                }
                return match;
              }
            );

            // Remove excessive newlines (more than two)
            newBody = newBody.replace(/\n{3,}/g, '\n\n');

            if (oldBody !== newBody) {
              await github.rest.pulls.update({
                ...context.repo,
                pull_number: context.payload.pull_request.number,
                body: newBody
              });
            }
